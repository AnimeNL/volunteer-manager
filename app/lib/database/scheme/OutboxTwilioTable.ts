// @ts-nocheck
// biome-ignore-all lint/style/useImportType: not feasible
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../Connection";
import {
    TemporalTypeAdapter,
} from "../TemporalTypeAdapter";
import {
    ZonedDateTime,
} from "../../Temporal";
import {
    TwilioOutboxType,
} from "../Types";

export class OutboxTwilioTable extends Table<DBConnection, 'OutboxTwilioTable'> {
    outboxTwilioId = this.autogeneratedPrimaryKey('outbox_twilio_id', 'int');
    outboxTimestamp = this.column<ZonedDateTime>('outbox_timestamp', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    outboxType = this.column<TwilioOutboxType>('outbox_type', 'enum', 'TwilioOutboxType');
    outboxSender = this.optionalColumnWithDefaultValue('outbox_sender', 'string');
    outboxSenderUserId = this.optionalColumnWithDefaultValue('outbox_sender_user_id', 'int');
    outboxRecipient = this.column('outbox_recipient', 'string');
    outboxRecipientUserId = this.column('outbox_recipient_user_id', 'int');
    outboxMessage = this.column('outbox_message', 'string');
    outboxErrorName = this.optionalColumnWithDefaultValue('outbox_error_name', 'string');
    outboxErrorCause = this.optionalColumnWithDefaultValue('outbox_error_cause', 'string');
    outboxErrorMessage = this.optionalColumnWithDefaultValue('outbox_error_message', 'string');
    outboxErrorStack = this.optionalColumnWithDefaultValue('outbox_error_stack', 'string');
    outboxResultStatus = this.optionalColumnWithDefaultValue('outbox_result_status', 'string');
    outboxResultSid = this.optionalColumnWithDefaultValue('outbox_result_sid', 'string');
    outboxResultTime = this.optionalColumnWithDefaultValue('outbox_result_time', 'int');
    outboxResultErrorCode = this.optionalColumnWithDefaultValue('outbox_result_error_code', 'int');
    outboxResultErrorMessage = this.optionalColumnWithDefaultValue('outbox_result_error_message', 'string');

    constructor() {
        super('outbox_twilio');
    }
}

export const tOutboxTwilio = new OutboxTwilioTable();

