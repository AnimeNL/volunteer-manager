// @ts-nocheck
/* eslint-disable quotes, max-len */
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../Connection";
import {
    BlobTypeAdapter,
} from "../BlobTypeAdapter";
import {
    TemporalTypeAdapter,
} from "../TemporalTypeAdapter";
import {
    ZonedDateTime,
} from "../../Temporal";

export class UsersPasskeysTable extends Table<DBConnection, 'UsersPasskeysTable'> {
    userPasskeyId = this.autogeneratedPrimaryKey('user_passkey_id', 'int');
    userId = this.column('user_id', 'int');
    credentialId = this.column<Buffer>('credential_id', 'custom', 'Blob', BlobTypeAdapter);
    credentialName = this.optionalColumnWithDefaultValue('credential_name', 'string');
    credentialCreated = this.columnWithDefaultValue<ZonedDateTime>('credential_created', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    credentialOrigin = this.column('credential_origin', 'string');
    credentialPublicKey = this.column<Buffer>('credential_public_key', 'custom', 'Blob', BlobTypeAdapter);
    credentialDeviceType = this.column('credential_device_type', 'string');
    credentialBackedUp = this.column('credential_backed_up', 'int');
    credentialLastUsed = this.optionalColumnWithDefaultValue<ZonedDateTime>('credential_last_used', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    counter = this.column('counter', 'bigint');

    constructor() {
        super('users_passkeys');
    }
}


