// @ts-nocheck
/* eslint-disable quotes, max-len */
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../Connection";
import {
    RoleBadge,
} from "../Types";

export class RolesTable extends Table<DBConnection, 'RolesTable'> {
    roleId = this.autogeneratedPrimaryKey('role_id', 'int');
    roleName = this.column('role_name', 'string');
    roleBadge = this.optionalColumnWithDefaultValue<RoleBadge>('role_badge', 'enum', 'RoleBadge');
    roleOrder = this.columnWithDefaultValue('role_order', 'int');
    roleAvailabilityEventLimit = this.column('role_availability_event_limit', 'int');
    rolePermissionGrant = this.optionalColumnWithDefaultValue('role_permission_grant', 'string');
    roleFlagDefaultRestricted = this.columnWithDefaultValue('role_flag_default_restricted', 'int');
    roleAdminAccess = this.columnWithDefaultValue('role_admin_access', 'int');
    roleHotelEligible = this.columnWithDefaultValue('role_hotel_eligible', 'int');
    roleScheduleCollapse = this.columnWithDefaultValue('role_schedule_collapse', 'int');
    roleTrainingEligible = this.columnWithDefaultValue('role_training_eligible', 'int');

    constructor() {
        super('roles');
    }
}

export const tRoles = new RolesTable();

