// @ts-nocheck
/* eslint-disable quotes, max-len */
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../Connection";
import {
    DateTimeTypeAdapter,
} from "../DateTimeTypeAdapter";
import {
    ActivityType,
} from "../Types";
import {
    DateTime,
} from "../../DateTime";

export class ActivitiesTable extends Table<DBConnection, 'ActivitiesTable'> {
    activityId = this.autogeneratedPrimaryKey('activity_id', 'int');
    activityFestivalId = this.column('activity_festival_id', 'int');
    activityType = this.column<ActivityType>('activity_type', 'enum', 'ActivityType');
    activityTitle = this.column('activity_title', 'string');
    activityDescription = this.optionalColumnWithDefaultValue('activity_description', 'string');
    activityUrl = this.optionalColumnWithDefaultValue('activity_url', 'string');
    activityPrice = this.optionalColumnWithDefaultValue('activity_price', 'double');
    activityHelpNeeded = this.column('activity_help_needed', 'int');
    activityMaxVisitors = this.optionalColumnWithDefaultValue('activity_max_visitors', 'int');
    activityTypeAdultsOnly = this.column('activity_type_adults_only', 'int');
    activityTypeCompetition = this.column('activity_type_competition', 'int');
    activityTypeCosplay = this.column('activity_type_cosplay', 'int');
    activityTypeEvent = this.column('activity_type_event', 'int');
    activityTypeGameRoom = this.column('activity_type_game_room', 'int');
    activityTypeVideo = this.column('activity_type_video', 'int');
    activityVisible = this.column('activity_visible', 'int');
    activityVisibleReason = this.optionalColumnWithDefaultValue('activity_visible_reason', 'string');
    activityCreated = this.column<DateTime>('activity_created', 'customComparable', 'dateTime', DateTimeTypeAdapter);
    activityUpdated = this.column<DateTime>('activity_updated', 'customComparable', 'dateTime', DateTimeTypeAdapter);
    activityDeleted = this.optionalColumnWithDefaultValue<DateTime>('activity_deleted', 'customComparable', 'dateTime', DateTimeTypeAdapter);

    constructor() {
        super('activities');
    }
}


