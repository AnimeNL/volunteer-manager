// @ts-nocheck
// biome-ignore-all lint/style/useImportType: not feasible
/**
 * DO NOT EDIT:
 *
 * This file has been auto-generated from database schema using ts-sql-codegen.
 * Any changes will be overwritten.
 */
import { Table } from "ts-sql-query/Table";
import type { DBConnection } from "../Connection";
import {
    TemporalTypeAdapter,
} from "../TemporalTypeAdapter";
import {
    Mutation,
} from "../Types";
import {
    ZonedDateTime,
} from "../../Temporal";

export class ScheduleLogsTable extends Table<DBConnection, 'ScheduleLogsTable'> {
    mutationId = this.autogeneratedPrimaryKey('mutation_id', 'int');
    eventId = this.column('event_id', 'int');
    scheduleId = this.column('schedule_id', 'int');
    mutation = this.column<Mutation>('mutation', 'enum', 'Mutation');
    mutationBeforeShiftId = this.optionalColumnWithDefaultValue('mutation_before_shift_id', 'int');
    mutationBeforeTimeStart = this.optionalColumnWithDefaultValue<ZonedDateTime>('mutation_before_time_start', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    mutationBeforeTimeEnd = this.optionalColumnWithDefaultValue<ZonedDateTime>('mutation_before_time_end', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    mutationBeforeUserId = this.optionalColumnWithDefaultValue('mutation_before_user_id', 'int');
    mutationAfterShiftId = this.optionalColumnWithDefaultValue('mutation_after_shift_id', 'int');
    mutationAfterTimeStart = this.optionalColumnWithDefaultValue<ZonedDateTime>('mutation_after_time_start', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    mutationAfterTimeEnd = this.optionalColumnWithDefaultValue<ZonedDateTime>('mutation_after_time_end', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);
    mutationAfterUserId = this.optionalColumnWithDefaultValue('mutation_after_user_id', 'int');
    mutationUserId = this.column('mutation_user_id', 'int');
    mutationDate = this.columnWithDefaultValue<ZonedDateTime>('mutation_date', 'customLocalDateTime', 'dateTime', TemporalTypeAdapter);

    constructor() {
        super('schedule_logs');
    }
}

export const tScheduleLogs = new ScheduleLogsTable();

